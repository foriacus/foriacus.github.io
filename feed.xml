<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>连心焕娟</title>
  <link href="http://jilij.in/feed.xml" rel="self" />
  <link href="http://jilij.in" />
  <id>http://jilij.in</id>
  <entry>
    <title type="html"><![CDATA[Javascript 学习路线图]]></title>
    <link href="http://jilij.in/2013/08/roadmap.html"/>
    <published>2013-08-09T00:00:00.000Z</published>
    <updated>2013-08-09T00:00:00.000Z</updated>
    <id>http://jilij.in/2013/08/roadmap.html</id>
    <content type="html" xml:base="http://jilij.in" xml:lang="en">
      <![CDATA[ <h1 id="understanding-javascript">Understanding JavaScript</h1><ul>
<li>JavaScript Isn&#39;t Just in the Browser</li>
<li>Debugging with console</li>
<li>Variables and Identifiers</li>
<li>Statements</li>
<li>Error Handling and Debugging</li>
<li>Primitive Types</li>
<li>Objects</li>
<li>Objects as Namespaces</li>
<li>Arrays</li>
<li>Functions</li>
<li>Scoping and Hoisting</li>
<li>Immediately Invoked Function Expressions</li>
<li>The Module Pattern</li>
<li>Method chaining</li>
<li>Dates</li>
<li>Regular Expressions</li>
<li>Coercion and Comparison</li>
<li>The typeof Operator</li>
<li>The instanceof Operator</li>
<li>Other Operators</li>
<li>Operator Precedence</li>
<li>Eval</li>
<li>Timers</li>
<li>Automatic Semicolon Insertion</li>
<li>JSON: JavaScript Object Notation</li>
<li>Instances and Inheritance</li>
<li>Creating objects with the Module Pattern</li>
<li>Creating objects with Constructors and Prototypes</li>
<li>Prototypal Inheritance</li>
<li>Browser JavaScript</li>
<li>The window Object</li>
<li>Browser History</li>
<li><p>The Document Object Model (DOM)</p>
<p>Document, Nodes,Live and Static NodeLists, Elements (Selecting, Creating, Manipulating), DocumentFragment, Traversing the DOM, TreeWalker, The Event Object, Event Bubbling and Capturing, Delegation and Custom Events.</p>
</li>
<li>Events</li>
</ul>
<h2 id="in-addition-these-topics-will-be-addressed">In addition, these topics will be addressed:</h2><ul>
<li>JSLint / JSHint</li>
<li>Minification</li>
<li>Unit testing</li>
<li>Documentation</li>
<li>Coding style</li>
<li>Performance</li>
</ul>
]]>
    </content>
  </entry><entry>
    <title type="html"><![CDATA[Backbone 笔试题]]></title>
    <link href="http://jilij.in/2013/08/backbone-quiz.html"/>
    <published>2013-08-02T00:00:00.000Z</published>
    <updated>2013-08-02T00:00:00.000Z</updated>
    <id>http://jilij.in/2013/08/backbone-quiz.html</id>
    <content type="html" xml:base="http://jilij.in" xml:lang="en">
      <![CDATA[ <h1 id="part-i">PART I</h1><h2 id="backbone">BACKBONE</h2><h4 id="1-backbone唯一硬依赖的工具库是：">1. Backbone唯一硬依赖的工具库是：</h4><p><code>A. underscore</code>  </p>
<p><code>B. lodash</code></p>
<p><code>C. jquery</code></p>
<p><code>D. zepto</code></p>
<h4 id="2-每一个view实例都拥有this-el来作为dom元素-那么el可以通过view的哪些属性来创建">2. 每一个view实例都拥有this.el来作为DOM元素, 那么el可以通过view的哪些属性来创建</h4><p><code>A. tagName</code></p>
<p><code>B. className</code></p>
<p><code>C. template</code></p>
<p><code>D. id</code></p>
<h4 id="3-下面哪些是backbone中的构造函数">3. 下面哪些是Backbone中的构造函数</h4><p><code>A. Router</code></p>
<p><code>B. Controller</code></p>
<p><code>C. Model</code></p>
<p><code>D. History</code></p>
<p><code>E. View</code></p>
<p><code>F. Collection</code></p>
<h4 id="4-backbone-events的使用方法是">4. Backbone.Events的使用方法是</h4><p><code>A. new直接实例化</code></p>
<p><code>B. MixTo</code></p>
<p><code>C. jquery.on</code></p>
<p><code>D. addEventListener</code></p>
<h4 id="5-backbone何时开始监听hashchange事件">5. Backbone何时开始监听hashchange事件</h4><p><code>A. var TodoRouter = Backbone.Router.extend({})</code></p>
<p><code>B. var myTodoRouter = new TodoRouter();</code></p>
<p><code>C. Backbone.history.start()</code></p>
<p><code>D. Backbone.navigate(&#39;/&#39;, {trigger: true})</code></p>
<h1 id="part-ii">PART II</h1><h2 id="css">CSS</h2><h4 id="1-下面哪一句话描述的是通过行内样式把css添加到网页中？">1. 下面哪一句话描述的是通过行内样式把CSS添加到网页中？</h4><p><code>A. CSS样式放在HTML文档的head元素中</code></p>
<p><code>B. CSS样式写在特定HTML标签的style属性中</code></p>
<p><code>C. 在HTML页面中通过link标签引入</code></p>
<p><code>D. 通过@import指令来加载CSS</code></p>
<h4 id="2-下面哪些css属性是不能继承的。">2. 下面哪些CSS属性是不能继承的。</h4><p><code>A. font</code></p>
<p><code>B. color</code></p>
<p><code>C. border</code></p>
<p><code>D. margin</code></p>
<p><code>E. padding</code></p>
<h4 id="3-z-index对position为下面哪些值的元素有效">3. z-index对position为下面哪些值的元素有效</h4><p><code>A. static</code></p>
<p><code>B. absolute</code></p>
<p><code>C. relative</code></p>
<p><code>D. fixed</code></p>
<h4 id="4-background-color前景色影响的范围是">4. background-color前景色影响的范围是</h4><p><code>A. content</code></p>
<p><code>B. border</code></p>
<p><code>C. padding</code></p>
<p><code>D. margin</code></p>
<h4 id="5-下面哪些可以作为清除浮动的方法">5. 下面哪些可以作为清除浮动的方法</h4><p><code>A. 添加额外空标签</code></p>
<p><code>B. 父元素设置overflow:hidden</code></p>
<p><code>C. 父元素也设置浮动</code></p>
<p><code>D. 给父元素添加clearfix类</code></p>
]]>
    </content>
  </entry><entry>
    <title type="html"><![CDATA[Hello Nico]]></title>
    <link href="http://jilij.in/2013/07/hello-nico.html"/>
    <published>2013-07-09T00:00:00.000Z</published>
    <updated>2013-07-09T00:00:00.000Z</updated>
    <id>http://jilij.in/2013/07/hello-nico.html</id>
    <content type="html" xml:base="http://jilij.in" xml:lang="en">
      <![CDATA[ <p>Here is an exmple post of nico. It supports Markdown:</p>
<h2 id="list">List</h2><ul>
<li>item 1</li>
<li>item 2</li>
</ul>
<h2 id="code">Code</h2><div class="highlight"><pre><code class="javascript"><span class="keyword">var</span> foo = <span class="string">'bar'</span></code></pre></div>]]>
    </content>
  </entry>
</feed>